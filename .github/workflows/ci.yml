name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install package + dev extras
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]" -v
          # optional JSON validation extras
          pip install -e ".[json]" -v || true
      - name: Lint (ruff)
        run: ruff check ./src/
      - name: Run tests with coverage (branch)
        run: |
          pytest -q --cov=corpusloom --cov-branch --cov-report=term --cov-fail-under=93
      - name: Upload coverage HTML (artifact)
        if: ${{ always() }}
        run: |
          coverage html
          tar -czf htmlcov.tgz htmlcov || true
      - name: Store artifact
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}
          path: htmlcov.tgz

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Build package
        run: |
      - name: Upgrade build tools
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade build setuptools wheel twine packaging
          python -m build
          ls -l dist
      - name: Upload Built distributions
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
          if-no-files-found: error
          retention-days: 14

  publish-to-testpypi:
    name: Publish Python üêç distribution üì¶ to TestPyPI
    needs:
    - build
    runs-on: ubuntu-latest

    environment:
      name: testpypi
      url: https://test.pypi.org/p/corpus-loom

    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
      
    - name: Verify distributions (twine check)
      run: |
        python -m pip install -U twine
        twine check dist/*

    - name: Publish distribution üì¶ to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        packages-dir: dist/
        verbose: true
        skip-existing: true
        verify-metadata: true

  publish:
    name: Publish to PyPI
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/corpus-loom 
    # Only run on tag pushes that look like v1.2.3
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      id-token: write   # for Trusted Publishing (recommended)
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
      - name: Download dist artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      # ‚ñ∫ Recommended: PyPI Trusted Publishing via OIDC (no API token needed)
      - name: Publish to PyPI (trusted publishing)
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true
          packages-dir: dist/
